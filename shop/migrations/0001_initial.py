# Generated by Django 4.2 on 2023-04-29 20:36

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(max_length=128)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Фото товара')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ItemNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_number', models.CharField(max_length=128, unique=True, verbose_name='Артикул товара')),
                ('name', models.CharField(max_length=128, verbose_name='Имя товара')),
                ('slug', models.SlugField(max_length=128)),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Общее описание артикула')),
                ('size', models.CharField(verbose_name='Размер товара данного артикула')),
                ('price', models.IntegerField(verbose_name='Цена товара данного артикула')),
                ('assembly_price', models.IntegerField(default=500, verbose_name='Цена сборки')),
                ('the_price_of_lifting_to_each_floor', models.IntegerField(default=200, verbose_name='Цена подъёма за каждый этаж')),
                ('the_price_of_lifting_by_elevator', models.IntegerField(default=500, verbose_name='Цена подъёма на лифте')),
                ('on_sale', models.BooleanField(default=True, verbose_name='В продаже')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='Категория артикула')),
            ],
            options={
                'verbose_name': 'Артикул',
                'verbose_name_plural': 'Артикулы',
                'ordering': ['item_number'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название производителя')),
                ('slug', models.SlugField(max_length=128)),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
            },
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название модуля')),
                ('slug', models.SlugField(max_length=128)),
                ('item_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.itemnumber')),
            ],
            options={
                'verbose_name': 'Модульная мебель',
                'verbose_name_plural': 'Модули',
            },
        ),
        migrations.CreateModel(
            name='ProductColors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название цвета')),
                ('slug', models.SlugField(allow_unicode=True, max_length=128, unique=True)),
                ('hex_code_color', models.CharField(max_length=7, verbose_name='Код цвета в кодировке HEX')),
            ],
            options={
                'verbose_name': 'Цвет товара',
                'verbose_name_plural': 'Цвета товаров',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Имя товара')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Описание данного товара')),
                ('size', models.CharField(blank=True, null=True, verbose_name='Размер товара')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Цена товара')),
                ('quantity_in_stock', models.IntegerField(default=1, verbose_name='Количество в наличии')),
                ('assembly_price', models.IntegerField(blank=True, null=True, verbose_name='Цена сборки')),
                ('the_price_of_lifting_to_each_floor', models.IntegerField(blank=True, null=True, verbose_name='Цена подъёма за каждый этаж')),
                ('the_price_of_lifting_by_elevator', models.IntegerField(blank=True, null=True, verbose_name='Цена подъёма на лифте')),
                ('on_sale', models.BooleanField(default=True, verbose_name='В продаже')),
                ('color_modification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productcolors', verbose_name='Цвет продукта')),
                ('item_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.itemnumber', verbose_name='Артикул товара')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.modules', verbose_name='Модуль товара')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_price', models.IntegerField(verbose_name='Новая цена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активация акции')),
                ('item_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.itemnumber', verbose_name='Артикул')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Акция',
                'verbose_name_plural': 'Акции',
            },
        ),
        migrations.CreateModel(
            name='ProductPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Фото товара')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Фото товара',
                'verbose_name_plural': 'Фото товаров',
            },
        ),
        migrations.CreateModel(
            name='ProductModifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65, verbose_name='Название модификации')),
                ('size', models.CharField(blank=True, null=True, verbose_name='Размер товара с данной модификацией')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Цена товара с данной модификацией')),
                ('quantity_in_stock', models.IntegerField(default=1, verbose_name='Количество в наличии')),
                ('assembly_price', models.IntegerField(blank=True, default=500, null=True, verbose_name='Цена сборки')),
                ('the_price_of_lifting_to_each_floor', models.IntegerField(blank=True, default=200, null=True, verbose_name='Цена подъёма за каждый этаж')),
                ('the_price_of_lifting_by_elevator', models.IntegerField(blank=True, default=500, null=True, verbose_name='Цена подъёма на лифте')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Модификация товара',
                'verbose_name_plural': 'Модификации товаров',
            },
        ),
        migrations.AddField(
            model_name='modules',
            name='main_product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='shop.products', verbose_name='Товар с полной комплектацией данного модуля'),
        ),
        migrations.AddField(
            model_name='itemnumber',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.manufacturer', verbose_name='Производитель'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
